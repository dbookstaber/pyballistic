name: Upload Python Package to PyPI

on:
  release:
    types: [ published, edited ]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Validate exts version matching
        run: |
          python -m pip install tomli
          python hooks/version_check.py

      - name: Install build tooling
        run: |
          python -m pip install build cibuildwheel

      - name: Build pure python package
        run: python -m build

      - name: Build binary python package
        run: |
          cd ./pyballistic.exts
          python -m build --sdist --outdir ../dist
          cibuildwheel --output-dir ../dist
          cd ..

      - name: List ./dist
        run: ls ./dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: ./dist

  publish:
    needs: build
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write
    steps:
      - name: Download artifacts (Ubuntu)
        uses: actions/download-artifact@v4
        with:
          name: dist-ubuntu-latest
          path: ./dist-ubuntu

      - name: Download artifacts (Windows)
        uses: actions/download-artifact@v4
        with:
          name: dist-windows-latest
          path: ./dist-windows

      - name: Download artifacts (macOS 13)
        uses: actions/download-artifact@v4
        with:
          name: dist-macos-13
          path: ./dist-macos-13

      - name: Download artifacts (macOS 14)
        uses: actions/download-artifact@v4
        with:
          name: dist-macos-14
          path: ./dist-macos-14

      - name: Inspect downloaded artifacts
        run: |
          echo "Ubuntu:" && ls -la ./dist-ubuntu || true
          echo "Windows:" && ls -la ./dist-windows || true
          echo "macOS 13:" && ls -la ./dist-macos-13 || true
          echo "macOS 14:" && ls -la ./dist-macos-14 || true

      - name: Combine artifacts
        shell: bash
        run: |
          mkdir -p dist
          cp ./dist-ubuntu/* dist/ 2>/dev/null || true
          cp ./dist-windows/* dist/ 2>/dev/null || true
          cp ./dist-macos-13/* dist/ 2>/dev/null || true
          cp ./dist-macos-14/* dist/ 2>/dev/null || true
          echo "Combined dists:" && ls -la dist || true
          if [ -z "$(ls -A dist 2>/dev/null)" ]; then
            echo "No distributions found in combined dist folder" >&2
            exit 1
          fi

      - name: Publish all distributions (pyballistic + exts)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true

name: Upload Python Package to PyPI

on:
  release:
    types: [ published, edited ]
  workflow_dispatch:

permissions:
  contents: read

jobs:

  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13, macos-14 ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Debug workflow context
        run: |
          echo "GITHUB_WORKFLOW_REF=$GITHUB_WORKFLOW_REF"
          echo "GITHUB_WORKFLOW_SHA=$GITHUB_WORKFLOW_SHA"
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_SHA=$GITHUB_SHA"
      - uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Validate exts version matching
        run: |
          python -m pip install tomli
          python hooks/version_check.py

      - name: Install dependencies
        run: |
          cp dist/pyballistic-exts-[0-9]* dist-exts/ 2>/dev/null || true
          python -m pip install build cibuildwheel

      - name: Build pure python package
        run: python -m build

      - name: Build binary python package
        run: |
          cd ./pyballistic.exts
          python -m build --sdist --outdir ../dist
          cibuildwheel --output-dir ../dist
          cd ..
            echo "Exts patterns:" && ls -la dist/pyballistic.exts-[0-9]* dist/pyballistic-exts-[0-9]* dist/pyballistic_exts-*.whl 2>/dev/null || true
      - name: List ./dist
        run: ls ./dist

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: ./dist

  publish:
    needs: build
    runs-on: ubuntu-latest

      - name: Publish all distributions (pyballistic + exts)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist
          skip-existing: true
          cp ./dist-ubuntu/* dist/ || true
          cp ./dist-windows/* dist/ || true
          cp ./dist-macos-13/* dist/ || true
          cp ./dist-macos-14/* dist/ || true
          echo "Combined dists:" && ls -la dist || true
          # Fail fast if nothing combined
          if [ -z "$(ls -A dist 2>/dev/null)" ]; then
            echo "No distributions found in combined dist folder" >&2
            exit 1
          fi

      - name: List ./dist
        run: ls ./dist

      - name: Split dists for core and exts
        shell: bash
        run: |
          set -e
          mkdir -p dist-core dist-exts
          echo "Splitting combined dists..."
          echo "Combined dist contents:" && ls -la dist || true
          # Copy core (handles sdist and wheels)
          cp dist/pyballistic-[0-9]* dist-core/ 2>/dev/null || true
          cp dist/pyballistic-*.whl dist-core/ 2>/dev/null || true
          # Copy exts: dot and underscore package names (sdist + wheels)
          cp dist/pyballistic.exts-[0-9]* dist-exts/ 2>/dev/null || true
          cp dist/pyballistic_exts-*.whl dist-exts/ 2>/dev/null || true
          echo "Core dists:" && ls -la dist-core || true
          echo "Exts dists:" && ls -la dist-exts || true
          # Sanity checks with helpful debug
          if [ -z "$(ls -A dist-core 2>/dev/null)" ]; then
            echo "No core distributions were found after split" >&2
            echo "Core patterns:" && ls -la dist/pyballistic-[0-9]* dist/pyballistic-*.whl 2>/dev/null || true
            exit 1
          fi
          if [ -z "$(ls -A dist-exts 2>/dev/null)" ]; then
            echo "No extensions distributions were found after split" >&2
            echo "Exts patterns:" && ls -la dist/pyballistic.exts-[0-9]* dist/pyballistic_exts-*.whl 2>/dev/null || true
            exit 1
          fi

      - name: Publish core package (pyballistic)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist-core
          skip-existing: true

      - name: Publish extensions package (pyballistic.exts)
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist-exts
          skip-existing: true
